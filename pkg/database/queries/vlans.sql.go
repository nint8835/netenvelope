// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: vlans.sql

package queries

import (
	"context"
	"database/sql"
)

const createVlan = `-- name: CreateVlan :one
INSERT INTO vlans (tag, name)
VALUES (?, ?)
RETURNING id, tag, name
`

type CreateVlanParams struct {
	Tag  int64
	Name sql.NullString
}

func (q *Queries) CreateVlan(ctx context.Context, arg CreateVlanParams) (Vlan, error) {
	row := q.db.QueryRowContext(ctx, createVlan, arg.Tag, arg.Name)
	var i Vlan
	err := row.Scan(&i.ID, &i.Tag, &i.Name)
	return i, err
}

const listVlans = `-- name: ListVlans :many
SELECT id, tag, name
from vlans
`

func (q *Queries) ListVlans(ctx context.Context) ([]Vlan, error) {
	rows, err := q.db.QueryContext(ctx, listVlans)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Vlan
	for rows.Next() {
		var i Vlan
		if err := rows.Scan(&i.ID, &i.Tag, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
